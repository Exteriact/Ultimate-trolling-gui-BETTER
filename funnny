local allowedUserIds = {
    7521064612, -- Replace with actual UserId
    87654321, -- Replace with actual UserId
    -- Add more UserIds as needed
}

local player = game.Players.LocalPlayer
local userId = player.UserId

-- Check if the player is allowed to use this script
local isAllowed = false
for _, id in ipairs(allowedUserIds) do
    if userId == id then
        isAllowed = true
        break
    end
end

if not isAllowed then
    return -- Stop executing the script if the player is not allowed
end

-- Create GUI
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "UltimateTrollingGUI"

local function makeDraggable(frame)
    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

local toggleButton = Instance.new("TextButton", screenGui)
toggleButton.Size = UDim2.new(0, 100, 0, 50)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.Text = "Minimize"
toggleButton.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
toggleButton.TextColor3 = Color3.fromRGB(0, 0, 0)

local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0, 300, 0, 400)
mainFrame.Position = UDim2.new(0.5, -150, 0, 70)
mainFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
mainFrame.BackgroundTransparency = 0.5
mainFrame.Visible = true

makeDraggable(mainFrame)

local titleLabel = Instance.new("TextLabel", mainFrame)
titleLabel.Size = UDim2.new(1, 0, 0, 50)
titleLabel.Text = "Ultimate Trolling GUI"
titleLabel.BackgroundColor3 = Color3.fromRGB(100, 100, 255)
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextScaled = true

local nameInput = Instance.new("TextBox", mainFrame)
nameInput.Size = UDim2.new(0.8, 0, 0, 40)
nameInput.Position = UDim2.new(0.1, 0, 0, 60)
nameInput.PlaceholderText = "Enter Player Name"
nameInput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
nameInput.TextColor3 = Color3.fromRGB(0, 0, 0)
nameInput.TextScaled = true

local actions = {
    Teleport = function(player)
        if player.Character then
            player.Character:SetPrimaryPartCFrame(CFrame.new(math.random(-100, 100), math.random(10, 50), math.random(-100, 100)))
        end
    end,
    Flip = function(player)
        if player.Character then
            player.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(180), 0)
        end
    end,
    Dance = function(player)
        if player.Character then
            local anim = Instance.new("Animation")
            anim.AnimationId = "rbxassetid://2510196951"
            player.Character.Humanoid:LoadAnimation(anim):Play()
        end
    end,
    ["Change Size"] = function(player)
        if player.Character then
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.BodyHeightScale.Value = math.random(50, 150) / 100
                humanoid.BodyWidthScale.Value = math.random(50, 150) / 100
                humanoid.BodyDepthScale.Value = math.random(50, 150) / 100
            end
        end
    end,
    ["Change Color"] = function(player)
        if player.Character then
            for _, part in ipairs(player.Character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.BrickColor = BrickColor.Random()
                end
            end
        end
    end,
    Freeze = function(player)
        if player.Character then
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.PlatformStand = true
                wait(3)
                humanoid.PlatformStand = false
            end
        end
    end
}

local buttonY = 110
for actionName, actionFunc in pairs(actions) do
    local button = Instance.new("TextButton", mainFrame)
    button.Size = UDim2.new(0.8, 0, 0, 50)
    button.Position = UDim2.new(0.1, 0, 0, buttonY)
    button.Text = actionName
    button.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    button.TextColor3 = Color3.fromRGB(0, 0, 0)
    button.TextScaled = true
    button.MouseButton1Click:Connect(function()
        local player = game.Players:FindFirstChild(nameInput.Text)
        if player and player ~= game.Players.LocalPlayer then
            actionFunc(player)
        end
    end)
    buttonY = buttonY + 60
end

toggleButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
    toggleButton.Text = mainFrame.Visible and "Minimize" or "Maximize"
end)
